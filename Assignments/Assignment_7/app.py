# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15IzXpVF8nOkxQRZpeghOLJ3Xelk26WeF
"""

import streamlit as st
import pandas as pd
import pickle

# Load the trained pipeline/model
with open('pipeline_model.pkl', 'rb') as file:
    pipeline = pickle.load(file)  # Fixed incorrect reference to `pipeline_model.pkl`

# Title of the app
st.title('Titanic Survival Prediction :ship:')

# Input fields for user input
st.markdown('Provide passenger details to predict survival chances:')

Pclass = st.selectbox('Passenger Class (Pclass)', [1, 2, 3])
Sex = st.selectbox('Sex', ['male', 'female'])
Age = st.number_input('Age', min_value=0, max_value=100, value=30)
SibSp = st.number_input('Number of Siblings/Spouses Aboard (SibSp)', min_value=0, max_value=10, value=0)
Parch = st.number_input('Number of Parents/Children Aboard (Parch)', min_value=0, max_value=10, value=0)
Fare = st.number_input('Fare', min_value=0.0, value=30.0)
Embarked = st.selectbox('Port of Embarkation (Embarked)', ['S', 'C', 'Q'])

# Convert categorical inputs to numerical values for the model
Sex = 1 if Sex == 'female' else 0
Embarked_mapping = {'S': 2, 'C': 0, 'Q': 1}
Embarked = Embarked_mapping[Embarked]

# Create a DataFrame for the input
user_input = pd.DataFrame({
    'Pclass': [Pclass],
    'Sex': [Sex],
    'Age': [Age],
    'SibSp': [SibSp],
    'Parch': [Parch],
    'Fare': [Fare],
    'Embarked': [Embarked]
})

# Prediction and probability
if st.button('Predict'):
    prediction = pipeline.predict(user_input)
    prediction_proba = pipeline.predict_proba(user_input)[:, 1]

    # Display the result
    if prediction[0] == 1:
        st.write(f'**Survival Probability:** {prediction_proba[0] * 100:.2f}%')
        st.success('Passenger is likely to **Survive**.')
    else:
        st.write(f'**Survival Probability:** {(1 - prediction_proba[0]) * 100:.2f}%')
        st.error('Passenger is unlikely to **Survive**.')